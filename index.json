[{"categories":["coding"],"content":"用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 appendTail 和 deleteHead ，分别完成在队列尾部插入整数和在队列头部删除整数的功能。(若队列中没有元素，deleteHead 操作返回 -1 ) 示例 1： 输入： [\"CQueue\",\"appendTail\",\"deleteHead\",\"deleteHead\"] [[],[3],[],[]] 输出：[null,null,3,-1] 示例 2： 输入： [\"CQueue\",\"deleteHead\",\"appendTail\",\"appendTail\",\"deleteHead\",\"deleteHead\"] [[],[],[5],[2],[],[]] 输出：[null,-1,null,null,5,2] 提示： 1 \u003c= values \u003c= 10000 最多会对 appendTail、deleteHead 进行 10000 次调用 来源：力扣（LeetCode） 链接：https://leetcode-cn.com/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。 解题思路 输入为两个栈， 第一个栈对应的是操作： [“CQueue”,“appendTail”,“deleteHead”,“deleteHead”] CQueue表示init一个CQueue object appendTail表示调用appendTail函数 deleteHead表示调用deleteHead函数 第二个栈对应的是操作的值。 栈（Stack）的特点是先入后出，但是我们需要实现直接操作Head的功能。因此使用两个Stack可以实现列表倒序。 class CQueue: def __init__(self): self.A, self.B = [], [] def appendTail(self, value: int) -\u003e None: self.A.append(value) def deleteHead(self) -\u003e int: if self.B: return self.B.pop() if not self.A: return -1 while self.A: self.B.append(self.A.pop()) return self.B.pop() 时间复杂度： appendTail()为O(1), deleteHead()为O(N) 空间复杂度：O(N) ","date":"2022-01-08","objectID":"/jz09.%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97/:0:0","tags":["linux","leetcode"],"title":"剑指 Offer 09. 用两个栈实现队列","uri":"/jz09.%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97/"},{"categories":["Papers"],"content":"Title: A geometric deep learning approach to predict binding conformations of bioactive molecules DOI: https://doi.org/10.1038/s42256-021-00409-9 INFO: NATURE MACHINE INTELLIGENCE | VOL 3 | DECEMBER 2021 发表周期: Received: 18 May 2021; Accepted: 28 September 2021; Published online: 2 December 2021 药物设计是近年来AI应用的极火领域之一，其中一个最有挑战的问题就是空间结构设计。 One of the difficulties arises from the fact that only a small portion of the large chemical space will bind to a specific biological target and result in a therapeutic effect. 这篇文章中作者应用深度学习模型DeepDock捕获protein-ligand complex中的原子级微环境特征学习其中的结合构象。 数据集制备 The model reported in this study was trained using the general set of the PDBbind database (v.2019)30, which contains a collection of 17,679 protein–ligand structures with their respective potency (half-maximum inhibitory concentration, dissociation constant and so on). From these, we removed those complexes that are included in the CASF-2016 benchmark and those that failed during the preprocessing step, leaving a total of 16,367 protein–ligand complexes, which were randomly divided in a training set containing 15,000 complexes and a test set with 1,367. PDBbind数据库（http://www.pdbbind.org.cn）是基于PDB数据库，整合了大量实验统计所得的蛋白亲和力数据。 The PDBbind database is a comprehensive collection of experimentally measured binding affinity data (Kd, Ki, and IC50) for the protein-ligand complexes deposited in the Protein Data Bank (PDB).[1][2] It thus provides a link between energetic and structural information of protein-ligand complexes, which is of great value to various studies on molecular recognition occurred in biological systems. 作者使用图结构表示蛋白空间结构，node表示原子，edge表示bond。 Every node is represented by a one-hot vector that indicates the atom type among 28 possibilities (Be, B, C, N, O, F, Mg, Si, P, S, Cl, V, Fe, Co, Cu, Zn, As, Se, Br, Ru, Rh, Sb, I, Re, Os, Ir, Pt and Hg). 目标蛋白表面使用MSMS建模。 As in MaSIF, protein surfaces were triangulated using MSMS37 with a density of 3.0 nodes per Å^2 and a probe radius of 1.5 Å. The resulting meshes were downsampled to a resolution of 1 Å and processed using PyMesh. 只有具备结合位点性质的node才用于模型训练。 网络训练 如Fig1c，平行的图卷积网络被用来分别提取ligand和target结构中的表征以及特征编码。 Our approach directly uses the molecular surface of the binding site in the form of a polygon mesh. Both the target mesh and the ligand graph are processed by independent residual GNNs. Through this procedure, the processed node fea- tures not only contain information of an individual atom or point in the molecular surface, but also have information about the other nodes around them. In other words, the processed atom features encode all the atomic environment around a specific atom, whereas the target features encode a patch of the molecular surface around a specific point. GNN从ligand和target中分别提取出来的特征在特征向量上简单拼接后被送入mixture density network (MDN)。 by using this probability density function we can estimate the likelihood of finding ligand node i separated from a target node j by any distance $d_{ij}$. 模型评估 作者通过在CASF-2016 benchmark预测 Docking power Forward screening power Reverse screening power 来评估模型性能。 Docking power The evaluation of docking power measures the ability of a scor- ing function to identify native ligand binding poses among a set of decoys. Screening power The evaluation of screening power in CASF-2016 is designed to measure the ability of a scoring function to identify true binders of a specific target from a pool of random compounds. 模型细节 模型可分为3部分： 特征提取 特征融合 MDN First, the node and edge features are projected to a 128D embedding using a linear layer. We then use a sequence of three GNNs to update each node and edge based on their neighbouring nodes and the type of edges connecting them. After the initial processing by the GNNs, the node and edge features were processed by 10 residual GNN blocks. The MDN uses an MLP to create a hidden representation $h_{r,s}$ that combines the concatenated target and ligand node information. All MLPs used are composed of a linear layer followed by batch n","date":"2022-01-02","objectID":"/nmi-a-geometric-deep-learning-approach-to-predict-binding-conformations-of-bioactive-molecules/:0:0","tags":["NMI","Machine learning","proteins"],"title":"[NMI] A geometric deep learning approach to predict binding conformations of bioactive molecules 解读","uri":"/nmi-a-geometric-deep-learning-approach-to-predict-binding-conformations-of-bioactive-molecules/"},{"categories":["database"],"content":"ER diagram Notation: Chen Notation Crow’s Foot Notation UML Class Diagram Notation ","date":"2022-01-02","objectID":"/er_diagram_notation/:0:0","tags":["SQL","database"],"title":"ER Diagram Notation","uri":"/er_diagram_notation/"},{"categories":["system"],"content":"Example MD ","date":"2022-01-01","objectID":"/example/:0:0","tags":["linux"],"title":"Example","uri":"/example/"},{"categories":["system"],"content":"Problem Description Fors some unknow reason, the user is unable to click the text boxes or type anything into the publish window after running the Build \u0026 Publish. When the user clicks the main window in Unity, the cursor disappears and the user can not select the text boxes or anything else. This problem happens under my settings, macOS Catalina 10.15.7, Unity 2019.4.31f1, VRChat SDK3. Solution The reason of this problem is that when you click the temp scene created by the SDK3, the cursor will be invisible and locked. Find this file: VRCSDK/Dependencies/VRChat/ Scripts/RuntimeWorldCreation.cs Find this content, marked function Start(). new void Start() { if (!Application.isEditor || !Application.isPlaying) return; base.Start(); IsCurrentWorldInCommunityLabs = false; IsCurrentWorldUploaded = false; IsCurrentWorldPubliclyPublished = false; var desc = pipelineManager.GetComponent\u003cVRC.SDKBase.VRC_SceneDescriptor\u003e(); desc.PositionPortraitCamera(imageCapture.shotCamera.transform); Application.runInBackground = true; UnityEngine.XR.XRSettings.enabled = false; uploadButton.onClick.AddListener(SetupUpload); openCommunityLabsDocsButton.onClick.AddListener(OpenCommunityLabsDocumentation); shouldUpdateImageToggle.onValueChanged.AddListener(ToggleUpdateImage); releasePublic.gameObject.SetActive(false); System.Action\u003cstring\u003e onError = (err) =\u003e { VRC.Core.Logger.LogError(\"Could not authenticate - \" + err, DebugLevel.Always); blueprintPanel.SetActive(false); errorPanel.SetActive(true); }; Add 2 lines. Cursor.visible=true; Cursor.lockState=0; Now the final content will be new void Start() { Cursor.visible=true; Cursor.lockState=0; if (!Application.isEditor || !Application.isPlaying) return; base.Start(); IsCurrentWorldInCommunityLabs = false; IsCurrentWorldUploaded = false; IsCurrentWorldPubliclyPublished = false; var desc = pipelineManager.GetComponent\u003cVRC.SDKBase.VRC_SceneDescriptor\u003e(); desc.PositionPortraitCamera(imageCapture.shotCamera.transform); Application.runInBackground = true; UnityEngine.XR.XRSettings.enabled = false; uploadButton.onClick.AddListener(SetupUpload); openCommunityLabsDocsButton.onClick.AddListener(OpenCommunityLabsDocumentation); shouldUpdateImageToggle.onValueChanged.AddListener(ToggleUpdateImage); releasePublic.gameObject.SetActive(false); System.Action\u003cstring\u003e onError = (err) =\u003e { VRC.Core.Logger.LogError(\"Could not authenticate - \" + err, DebugLevel.Always); blueprintPanel.SetActive(false); errorPanel.SetActive(true); }; if (!ApiCredentials.Load()) onError(\"Not logged in\"); else APIUser.InitialFetchCurrentUser( delegate (ApiModelContainer\u003cAPIUser\u003e c) { UserLoggedInCallback(c.Model as APIUser); }, delegate (ApiModelContainer\u003cAPIUser\u003e c) { onError(c.Error); } ); Now rebuild, you find you can edit the texts now. ","date":"2021-12-17","objectID":"/vrcsdk_can_not_edit_text/:0:0","tags":["linux"],"title":"Unable to interact with text boxes during Build \u0026 Publish for VRChat SDK3","uri":"/vrcsdk_can_not_edit_text/"},{"categories":["system"],"content":" Avticate your environment，check for package ipykernel python -m ipykernel –version If it’s not installed： python -m pip install ipykernel Add kernel to Jupyter notebook python -m ipykernel install –user –name ‘kernelname’ Check Jupyter notebook kernel jupyter kernelspec list Delet jupyter kernel jupyter kernelspec remove kernelname ","date":"2021-11-28","objectID":"/install-jupyter-kernel/:0:0","tags":["system","linux","conda","python"],"title":"Install kernel for jupyter notebook","uri":"/install-jupyter-kernel/"},{"categories":["leetcode"],"content":"Given a string s, find the length of the longest substring without repeating characters. Example 1: Input: s = \"abcabcbb\" Output: 3 Explanation: The answer is \"abc\", with the length of 3. Example 2: Input: s = \"bbbbb\" Output: 1 Explanation: The answer is \"b\", with the length of 1. Example 3: Input: s = \"pwwkew\" Output: 3 Explanation: The answer is \"wke\", with the length of 3. Notice that the answer must be a substring, \"pwke\" is a subsequence and not a substring. Example 4: Input: s = \"\" Output: 0 Constraints: 0 \u003c= s.length \u003c= 5 * 104 s consists of English letters, digits, symbols and spaces. Thinking The simplest method to do is the brute force searching. Given a substring, we check whether it contains repeated characters. Then for all substrings of a given string, we do such a test and the total number of substrings of a given string with length $n$ is $n*(n+1)/2$. For example, For each substring str[i, j] i.e. starting from index i and ending at index j, we use a function areUnique(str, i, j) to check if all the characters in the substring are unique or not. It will return true if all the characters are unique, otherwise false. The time complexity of areUnque(str,i,j) is $O(j-i+1)$. So the overall time compelxity is $n*(n+1)/2*O(j-i+1)=O(n^2)*O(j-i+1)$. In the worst-case, $O(j-i+1)=O(n)$, so the worst-case overall time complexity is $O(n^3)$. We are using few extra variables and a constant size set visited[]. So space complexity = O(1). To optimize, here is an optimization insight: In the brute force idea, we repeatedly check a substring starting from the character str[i] to see if it has a duplicate character or not. We can optimize it further because, during the loop, if a substring str[i, j-1] is already checked to have no duplicate characters, then for the substring str[i, j], we only need to check if str[j] is already present in the substring str[i, j-1] or not. Partially cited from: https://www.enjoyalgorithms.com/blog/longest-substring-without-repeating-characters ","date":"2021-11-18","objectID":"/lc3.longest_substring_without_repeating_characters/:0:0","tags":["coding"],"title":"lc3.Longest Substring Without Repeating Characters","uri":"/lc3.longest_substring_without_repeating_characters/"},{"categories":["interview"],"content":"Q. What are genetic algorithm and evolutionary algorithm? Genetic algorithm (GA) is a sub-class of evolutionary algorithm (EA). There are 3 implementation of EAs: GA, evolution strategies (ES), and evolutionary programming (EP). Among these, GAs have proved to be the most popular of the 3 EAs. These algorithms are similar in general, yet there are big differences among them: GA: They were developed by Holland and thoroughly reviewed by Goldberg; ES: They were developed by Rechenberg and Schwefe; and EP: It was developed by L.J. Fogel and D.B. Fogel. Similarity and Differences: All 3 operate on fixed length strings, which contain real values in ESs and EP and binary numbers in the canonical GA. All 3 incorporate a mutation operator: for ESs and EP mutation is the driving force. GAs and ESs also use a recombination operator, which is the primary operator for the GA. All 3 use a selection operator which applies evolutionary pressure, either instinctive (in ESs and EP, the operator determines which individuals will be excluded from the new population) or preservative (in the GA the operator selects individuals for breeding).. In GAs and EP selection is probabilistic, while ESs use a deterministic selection. ESs and meta-EP allow self-adaptation, where parameters controlling mutation are allowed to evolve along with object variables. Finally, it is worth noting that the implementer is free to modify these algorithms. For example, the GA can be run using an integer alphabet. From: https://www.researchgate.net/post/Are_Genetic_Algorithms_GA_and_Evolutionary_Algorithms_EA_the_same_or_different ","date":"2021-11-14","objectID":"/i4.gaea/:0:0","tags":["interview","machine learning"],"title":"i4.genetic algorithm and evolutionary algorithm","uri":"/i4.gaea/"},{"categories":["system"],"content":"Install sudo apt install slurm-wlm slurm-wlm-doc -y Modify config rm /etc/slurm-llnl/slurm.conf vi /etc/slurm-llnl/slurm.conf Example of config # slurm.conf file generated by configurator easy.html. # Put this file on all nodes of your cluster. # See the slurm.conf man page for more information. # ControlMachine=girl #ControlAddr= # #MailProg=/bin/mail MpiDefault=none #MpiParams=ports=#-# ProctrackType=proctrack/pgid ReturnToService=1 SlurmctldPidFile=/var/run/slurm-llnl/slurmctld.pid #SlurmctldPort=6817 SlurmdPidFile=/var/run/slurm-llnl/slurmd.pid #SlurmdPort=6818 SlurmdSpoolDir=/var/spool/slurmd SlurmUser=slurm #SlurmdUser=root StateSaveLocation=/var/spool/slurm-llnl SwitchType=switch/none TaskPlugin=task/none # # # TIMERS #KillWait=30 #MinJobAge=300 #SlurmctldTimeout=120 #SlurmdTimeout=300 # # # SCHEDULING FastSchedule=1 SchedulerType=sched/backfill SelectType=select/linear #SelectTypeParameters= # # # LOGGING AND ACCOUNTING AccountingStorageType=accounting_storage/none ClusterName=cluster #JobAcctGatherFrequency=30 JobAcctGatherType=jobacct_gather/none #SlurmctldDebug=3 #SlurmctldLogFile= #SlurmdDebug=3 #SlurmdLogFile= # # # COMPUTE NODES NodeName=girl CPUs=4 State=UNKNOWN PartitionName=debug Nodes=girl Default=YES MaxTime=INFINITE State=UP Mkdir and Chown rm -rf /var/spool/slurm-llnl mkdir /var/spool/slurm-llnl chown -R slurm.slurm /var/spool/slurm-llnl rm -rf /var/run/slurm-llnl/ mkdir /var/run/slurm-llnl/ chown -R slurm.slurm /var/run/slurm-llnl/ Start slurmd and enable on boot systemctl start slurmd systemctl enable slurmd systemctl start slurmctld systemctl enable slurmctld Start service systemctl restart slurmctld systemctl restart slurmd ","date":"2021-11-14","objectID":"/install-slurm/:0:0","tags":["system","linux"],"title":"Install Slurm in Ubuntu","uri":"/install-slurm/"},{"categories":["system"],"content":"问题在于VNCServer使用Python编写，所以受到系统Python版本影响。 解决方案： $ cd $HOME $ vim .bashrc 找到如下语句： export PATH=\"/home/user/anaconda2/bin:$PATH\" 并修改为，并保存退出。 export PATH=\"$PATH:/home/user/anaconda2/bin\" $ vncserver -kill :id $ source .bashrc $ conda config --set auto_activate_base false #取消conda自动启动base ","date":"2021-11-14","objectID":"/%E5%AE%89%E8%A3%85python%E5%AF%BC%E8%87%B4vnc%E7%95%8C%E9%9D%A2%E9%BB%91%E5%B1%8F/:0:0","tags":["system","linux"],"title":"安装Python导致VNC黑屏解决方案","uri":"/%E5%AE%89%E8%A3%85python%E5%AF%BC%E8%87%B4vnc%E7%95%8C%E9%9D%A2%E9%BB%91%E5%B1%8F/"},{"categories":["interview"],"content":"Q. What Are the Different Types of Machine Learning? Supervised learning A model makes predictions or decisions based on past or labeled data. Labeled data refers to sets of data that are given tags or labels, and thus made more meaningful. Unsupervised learning In this case, we don’t have labeled data, a model can identify patterns, anomalies, and relationships in the input data. Reinforcement learning The model learn based on the rewards received from the previous action. ","date":"2021-11-08","objectID":"/i3.different-types-of-machine-learning/:0:0","tags":["interview","machine learning"],"title":"i3.different types of machine learning","uri":"/i3.different-types-of-machine-learning/"},{"categories":["leetcode"],"content":"You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list. You may assume the two numbers do not contain any leading zero, except the number 0 itself. Example 1: Input: l1 = [2,4,3], l2 = [5,6,4] Output: [7,0,8] Explanation: 342 + 465 = 807. Example 2: Input: l1 = [0], l2 = [0] Output: [0] Example 3: Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9] Output: [8,9,9,9,0,0,0,1] Constraints: The number of nodes in each linked list is in the range [1, 100]. 0 \u003c= Node.val \u003c= 9 It is guaranteed that the list represents a number that does not have leading zeros. Thinking To understand the question, we need to specify: 2-\u003e4-\u003e3 stands for the number 342 5-\u003e6-\u003e4 stands for the number 465 So, the sum should be 807, which can be represented as 7-\u003e0-\u003e8 Then the process goes easily. Firstly we add 2 and 5, which is the first element of both lists, if the sum is smaller than 10, then we simply output the sum to the corresponding element in the output list. Let’s say 2+5-\u003e7. If sum is \u003e=10, we leave the mode to the corresponding position in the output list and add 1 to the follow position as we know the sum \u003c=19 (9+9+?1), here ?1 depends on whether there is a 1 from the previous position. Solution class Solution: def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -\u003e Optional[ListNode]: _add2next=0 initialNode=ListNode() currentNode=initialNode while True: try: _l1=l1.val except: _l1=0 try: _l2=l2.val except: _l2=0 _sum=_l1+_l2+_add2next currentNode.val=_sum%10 _add2next=_sum//10 try: l1=l1.next except: l1=None try: l2=l2.next except: l2=None if l1==l2==None and _add2next==0: break elif l1==l2==None and _add2next==1: currentNode.next=ListNode(val=1) break else: nextNode=ListNode() currentNode.next=nextNode currentNode=nextNode return initialNode Runtime: 68ms Memory: 14.4MB ","date":"2021-11-07","objectID":"/lc2.add2numbers/:0:0","tags":["coding"],"title":"lc2.Add Two Numbers","uri":"/lc2.add2numbers/"},{"categories":["system"],"content":"MacOS install uPic brew install uPic Set uPic Set uPic host to Github The default host is SMMS Set Typora uploading to uPic ","date":"2021-11-07","objectID":"/typora-upic-github-image-hosting-service/:0:0","tags":["linux"],"title":"typora \u0026 uPic \u0026 Github image hosting service","uri":"/typora-upic-github-image-hosting-service/"},{"categories":["system"],"content":"Mofidy .inputrc sudo vi ~/.inputrc Add this line set completion-ignore-case on Restart your terminal Now you can ignore the upper and lower case when you use Tab in terminal ","date":"2021-11-05","objectID":"/how-to-ignore-upperlower-case-with-tab-in-ubuntu/:0:0","tags":["linux"],"title":"How to ignore upper and lower case when using Tab in Ubuntu","uri":"/how-to-ignore-upperlower-case-with-tab-in-ubuntu/"},{"categories":["system"],"content":"Mofidy bash.bashrc sudo vi /etc/bash.bashrc Find those code in the file #enable bash completion in interactive shells #if ! shopt -oq posix; then # if [-f /usr/share/bash-completion/bash_completion ]; then # . /usr/share/bash-completion/bash_completion # elif [ -f /etc/bash_completion]; then # . /etc/bash_completion # fi #fi Remove # Like below: #enable bash completion in interactive shells if ! shopt -oq posix; then if [-f /usr/share/bash-completion/bash_completion ]; then . /usr/share/bash-completion/bash_completion elif [ -f /etc/bash_completion]; then . /etc/bash_completion fi fi Source it sudo source /etc/bash.bashrc Now you can use Tab to autocomplete your command ","date":"2021-11-04","objectID":"/how-to-set-autocomplete-in-ubuntu/:0:0","tags":["linux"],"title":"How to set autocomplete in Ubuntu","uri":"/how-to-set-autocomplete-in-ubuntu/"},{"categories":["interview"],"content":"Q. How Many Times Do A Clock’s Hands Overlap In A Day? The most important is not the answer but the way to think and work out problems. In total 22, because the clock hands approximately overlap at 12:00, 1:05, 2:10, 3:15, 4:20, 5:25, 6:30, 7:35, 8:40, 9:45 and 10:50 twice a day. Although reaching the wrong answer is fine to an extent, you should avoid these common errors. Don’t just blurt out an answer without thinking it through. If you give the wrong answer, don’t get flustered. Don’t say, “I don’t know.” Don’t sit in silence. If you just sit in your chair quietly, then the interviewer is not going to know how you came to your answer. Talking the answer out gives the hiring manager valuable insight into how you are able to think. cite from: https://www.livecareer.com/resources/interviews/questions/how-many-times-do-a-clocks-hands-overlap-in-a-day ","date":"2021-11-04","objectID":"/i2.clock-hand-overlap/:0:0","tags":["interview","thinking"],"title":"i2.How Many Times Do A Clock’s Hands Overlap In A Day?","uri":"/i2.clock-hand-overlap/"},{"categories":["system"],"content":"Install You can find it at here: https://github.com/svenstaro/miniserve/releases Usage miniserve --help miniserve 0.4.1 Sven-Hendrik Haase \u003csvenstaro@gmail.com\u003e, Boastful Squirrel \u003cboastful.squirrel@gmail.com\u003e For when you really just want to serve some files over HTTP right now! USAGE: miniserve [FLAGS] [OPTIONS] [--] [PATH] FLAGS: -u, --upload-files Enable file uploading -h, --help Prints help information -P, --no-symlinks Do not follow symbolic links -o, --overwrite-files Enable overriding existing files during file upload --random-route Generate a random 6-hexdigit route -V, --version Prints version information -v, --verbose Be verbose, includes emitting access logs OPTIONS: -a, --auth \u003cauth\u003e Set authentication (username:password) -c, --color-scheme \u003ccolor_scheme\u003e Default color scheme [default: Squirrel] [possible values: Archlinux, Zenburn, Monokai, Squirrel] -i, --if \u003cinterfaces\u003e... Interface to listen on -p, --port \u003cport\u003e Port to use [default: 8080] ARGS: \u003cPATH\u003e Which path to serve Serve single folder miniserve share/ -u -o Serve single file miniserve file Start user verification miniserve --auth joe:123 some_dir ","date":"2021-11-04","objectID":"/miniserver/:0:0","tags":["linux"],"title":"Miniserve, an elegant file server","uri":"/miniserver/"},{"categories":["interview"],"content":"Q. What is the most efficient way to sort a million integers? Time Complexity Sorting Algorithm Average Case Best Case Worst Case Bubble Sort O(n^2) O(n) O(n^2) Insertion Sort O(n^2) O(n) O(n^2) Selection Sort O(n^2) O(n^2) O(n^2) Quick Sort O(n.log(n)) O(n.log(n)) O(n^2) Merge Sort O(n.log(n)) O(n.log(n)) O(n.log(n)) Heap Sort O(n.log(n)) O(n.log(n)) O(n.log(n)) Counting Sort O(n+k) O(n+k) O(n+k) Radix Sort O(n*k) O(n*k) O(n*k) Bucket Sort O(n+k) O(n+k) O(n^2) Space Complexity Sorting Algorithm Space Complexity Bubble Sort O(1) Insertion Sort O(1) Selection Sort O(1) Quick Sort O(log(n)) Merge Sort O(n) Heap Sort O(1) Counting Sort O(k) Radix Sort O(n + k) Bucket Sort O(n) Stability Sorting Algorithm Stable Sort? Bubble Sort Yes Insertion Sort Yes Selection Sort No Quick Sort No Merge Sort Yes Heap Sort No Counting Sort Yes Radix Sort Yes Bucket Sort Yes Consider above all, merge sort will be the best choice. ","date":"2021-11-03","objectID":"/i1.sort-1-million/:0:0","tags":["interview","bat","algorithm"],"title":"i1.What is the most efficient way to sort a million integers?","uri":"/i1.sort-1-million/"},{"categories":["coding"],"content":"Install Conda Packaging Tool conda install conda-build anaconda-client ","date":"2021-11-01","objectID":"/publish-package-on-conda/:0:0","tags":["conda","python"],"title":"Publish python package on Anaconda","uri":"/publish-package-on-conda/"},{"categories":["coding"],"content":"File Structure - home/ - my_package/ - my_package/ - package_lib/ - setup.py - README.md - run_test.py - build.sh - meta.yaml ","date":"2021-11-01","objectID":"/publish-package-on-conda/:0:1","tags":["conda","python"],"title":"Publish python package on Anaconda","uri":"/publish-package-on-conda/"},{"categories":["coding"],"content":"meta.yaml This file tells conda-build how to package files under my_package/ package: name: my_package version: 1.1.2 source: path: my_package/my_package/ build: number: 0 requirements: build: - python \u003e=3 - setuptools run: - python \u003e=3 - numpy \u003e=1.20 - scipy - pandas - scikit-learn \u003e=0.22 - lightgbm - matplotlib - seaborn - plink \u003e=1.9 test: source_files: - run_test.py about: home: https://github.com/JoshuaChou2018 license: MIT ","date":"2021-11-01","objectID":"/publish-package-on-conda/:0:2","tags":["conda","python"],"title":"Publish python package on Anaconda","uri":"/publish-package-on-conda/"},{"categories":["coding"],"content":"build.sh The build.sh script contains methods to compile and install. So we use setuptools to complete the compilation and installation process. Content of build.sh # Install my_package $PYTHON setup.py install ","date":"2021-11-01","objectID":"/publish-package-on-conda/:0:3","tags":["conda","python"],"title":"Publish python package on Anaconda","uri":"/publish-package-on-conda/"},{"categories":["coding"],"content":"setup.py # -*- coding: utf-8 -*- from setuptools import setup, find_packages setup( name='my_package', version='1.0.3', description=( 'my_package' ), author='my_package', author_email='my_package', maintainer='my_package', maintainer_email='my_package', license='MIT License', url='https://github.com/JoshuaChou2018/my_package', packages=find_packages(), entry_points={ 'console_scripts': [ 'run = my_package.entry:main', ] }, classifiers=[ 'Operating System :: OS Independent', 'License :: OSI Approved :: MIT License', 'Programming Language :: Python :: 3' ], python_requires='\u003e=3' ) ","date":"2021-11-01","objectID":"/publish-package-on-conda/:0:4","tags":["conda","python"],"title":"Publish python package on Anaconda","uri":"/publish-package-on-conda/"},{"categories":["coding"],"content":"Start build conda build my_package/ ","date":"2021-11-01","objectID":"/publish-package-on-conda/:0:5","tags":["conda","python"],"title":"Publish python package on Anaconda","uri":"/publish-package-on-conda/"},{"categories":["coding"],"content":"Publish anaconda login anaconda upload /home/miniconda3/conda-bld/linux-64/my_package-1.0.0-py39_0.tar.bz2 ","date":"2021-11-01","objectID":"/publish-package-on-conda/:0:6","tags":["conda","python"],"title":"Publish python package on Anaconda","uri":"/publish-package-on-conda/"},{"categories":null,"content":"I’m Juexiao Zhou, Joshua Chou, 周觉晓 PhD student @KAUST. Major in Bioinformatics and Computer Science. Email: juexiao.zhou@gmail.com Wechat: JoshuaChou666 QQ: 414816433 CV, Github, Linkedln, ORCID, Google Scholar Education PhD Student, Supervised by Prof. Xin Gao, Computational Bioscience Research Center (CBRC), King Abdullah University of Science and Technology, Dec 2021 - Present MS Student, Supervised by Prof. Xin Gao, Computational Bioscience Research Center (CBRC), King Abdullah University of Science and Technology, Aug 2020 - Dec 2021 Visiting Student, Supervised by Prof. Xin Gao, Computational Bioscience Research Center (CBRC), King Abdullah University of Science and Technology, Sep 2019 - Feb 2020 B.S. (Honored) in Bioinformatics, Supervised by Prof. Wei Chen, Southern University of Science and Technology, Sep 2016 - Jun 2020 Research Interest Bioinformatics \u0026 Deep Learning Analysis and integration of biological omics data with deep learning methods. Developing new bioinformatics tools. Brain Science \u0026 Cognitive Neuroscience Mechanism of Language, Emotion, Memory, and Dream. Macroscopic phenomena and application of brain. The human brain and Artificial Intelligence. Brain Computer Interface Artificial Intelligence Theoretical Research of Deep Learning. Medical Imaging EEG, X-ray, fMRI Membership Chinese Association for Artificial Intelligence (CAAI) Member Reviewer Journal of Bioinformatics and Computational Biology ICONIP2020 MICCAI2020 ICMLA2021 ","date":"0001-01-01","objectID":"/about/:0:0","tags":null,"title":"","uri":"/about/"},{"categories":null,"content":"King Abdullah University of Science and Technology ","date":"0001-01-01","objectID":"/honours/:1:0","tags":null,"title":"","uri":"/honours/"},{"categories":null,"content":"KAUST, 2021-Present PhD, Computer Science GPA: 4.00 / 4.00 Excellent Research Award, CEMSE, 2021 ","date":"0001-01-01","objectID":"/honours/:2:0","tags":null,"title":"","uri":"/honours/"},{"categories":null,"content":"King Abdullah University of Science and Technology ","date":"0001-01-01","objectID":"/honours/:3:0","tags":null,"title":"","uri":"/honours/"},{"categories":null,"content":"KAUST, 2020-2021 MS, Computer Science GPA: 3.95 / 4.00 Student ambassador, CEMSE, 2021 Yearly best studetnt award, CEMSE, 2021 Full scholarship for MS/PhD study, 2020 ","date":"0001-01-01","objectID":"/honours/:4:0","tags":null,"title":"","uri":"/honours/"},{"categories":null,"content":"Southern University of Science and Technology ","date":"0001-01-01","objectID":"/honours/:5:0","tags":null,"title":"","uri":"/honours/"},{"categories":null,"content":"SUSTech, 2016-2020 Bachelor, Bioinformatics, Biology GPA: 3.92 / 4.00 (Top 0.1%), Core GPA: 3.94/4.00 Outstanding graduate of SUSTech, 2020. Cum Laude Graduate of the Department of Biology (Top 1/10), 2020. The Guinness world record for “the most vows received by a single civilized act activity”, 2019 Candidate for 2019 National Scholarship, 2019 Summer social practice excellent experience Award, 2018 Excellent Student, The First Prize Scholarship, 2018 Outstanding volunteer for the 12th CBIS Biennial Meeting, Shenzhen, China, 2018 Candidate for 2018 National Scholarship, 2018 Outstanding Volunteer of the 3rd Shenzhen International Life Science \u0026 Health Industry Summit (2016) Excellent Student, The First Prize Scholarship, 2017 Dean scholarship, The First Prize Scholarship, 2017 Excellent Student Cadre, 2017 Outstanding Volunteer of 2017 Shenzhen International Precision Medicine Summit, 2017 Alma mater practice excellent team, 2017 National Literary Creation Award, 2016 Excellent Student, The Second Prize Scholarship, 2016 ","date":"0001-01-01","objectID":"/honours/:6:0","tags":null,"title":"","uri":"/honours/"},{"categories":null,"content":"Journal Haoyang Li, Juexiao Zhou, Yi Zhou, Jieyu Chen, Feng Gao, Ying Xu, Xin Gao. An interpretable computer-aided diagnosis method for periodontitis from panoramic radiographs. Frontiers in Physiology, section Computational Physiology and Medicine, doi: 10.3389/fphys.2021.655556. [ link ] [ pdf ] Haoyang Li, Juexiao Zhou, Yi Zhou, Jieyu Chen, Feng Gao, Ying Xu, Xin Gao. Automatic and interpretable model for periodontitis diagnosis in panoramic radiographs. Medical Image Computing and Computer Assisted Interventions 2020. doi: 10.1007/978-3-030-59713-9_44 [ link ] [ pdf ] Zhongxiao Li, Yisheng Li, Bin Zhang, Yu Li, Yongkang Long, Juexiao Zhou, Xudong Zou, Min Zhang, Yuhui Hu, Wei Chen, Xin Gao. DeeReCT-APA: Prediction of Alternative Polyadenylation Site Usage through Deep Learning. Genomics Proteomics and Bioinformatics. doi: 10.1016/j.gpb.2020.05.004 [ link ] [ pdf ] Liongxi Zhou, Zhongxiao Li, Juexiao Zhou , Haoyang Li , Yupeng Chen, Yuxin Huang, Dexuan Xie, Lintao Zhao, Ming Fan, Shahrukh Hashmi, Faisal AbdelKareem, Riham Eiada, Xigang Xiao, Lihua Li, Zhaowen Qiu, and Xin Gao. A Rapid, Accurate and Machine-agnostic Segmentation and Quantification Method for CT-based COVID-19 Diagnosis. Transactions on Medical Imaging, 2020. doi: 10.1109/TMI.2020.3001810 [ link ] [ pdf ] Haoyang Li , Juexiao Zhou, Huiyan Sun, Zhaowen Qiu, Xin Gao and Ying Xu. CaMeRe: A novel tool for inference of cancer metabolic reprogramming. Front. Oncol., 2020. doi: 10.3389/fonc.2020.00207 [ link ] [ pdf ] Yisheng Li , Dr. Bernhard Schaefke , Dr. Xudong Zou , Min Zhang , Prof. Florian Heyd , Dr. Wei Sun , Dr. Bin Zhang , Dr. Guipeng Li , Weizheng Liang , Yuhao He , Juexiao Zhou , Yunfei Li , Mr. Liang Fang , Yuhui Hu. Pan-tissue analysis of allelic alternative polyadenylation suggests widespread functional regulation. Molecular Systems Biology, 2020. doi: 10.15252/msb.20199367 [ link ] [ pdf ] ","date":"0001-01-01","objectID":"/publications/:1:0","tags":null,"title":"","uri":"/publications/"},{"categories":null,"content":"Preprint or under review Juexiao Zhou, Bin Zhang, Haoyang Li, Longxi Zhou, Zhongxiao Li, Yongkang Long, Wenkai Han, Mengran Wang, Huanhuan Cui, Wei Chen, Xin Gao. DeeReCT-TSS: A novel meta-learning-based method annotates TSS in multiple cell types based on DNA sequences and RNA-seq data. under review. Longxi Zhou, Yitong Ding, Jiayang Guo, Ming Fan, Juexiao Zhou, Haoyang Li, Yujiao Li, Yuxin Huang, Yi Zhao, Yuetan Chu, Kun Wang, Qiming Fang, Xin Gao. Hongxia Zhang; Lihua Li. A Workflow for Automatic, Accurate and Robust Breast Tumor Segmentation on Multi-Database DCE-MRI. under review. Longxi Zhou, Xianglin Meng, Yuxin Huang, Kai Kang , Juexiao Zhou, Yuetan Chu , Haoyang Li , Dexuan Xie , Jiannan Zhang , Weizhen Yang , Na Bai , Yi Zhao , Mingyan Zhao , Guohuag Wang, Lawrence Carin, Xigang Xiao, Kaijiang YuZhaowen Qiu , and Xin Gao. Seeing the Unseen: Discovering Interpretable Sub-Visual Abnormalities in CT Scans of COVID-19 Patients and Survivors by Deep Learning. under review. ","date":"0001-01-01","objectID":"/publications/:2:0","tags":null,"title":"","uri":"/publications/"},{"categories":null,"content":"Conference Haoyang Li, Juexiao Zhou , Xin Gao. Deetal-Perio: DEEp denTAL Advisor for Periodontitis Diagnosis based on Two-step Segmentation of Teeth and Gingiva with Lower-dimensional Features. Poster. DigitalHealth, KAUST, 2020. Haoyang Li, Juexiao Zhou, Huiyan Sun, Zhaowen Qiu, Xin Gao and Ying Xu. CaMeRe: A novel tool for inference of cancer metabolic reprogramming. Poster. Advance In Artificial Intelligence, KAUST, 2019. Yongkang Long, Juexiao Zhou, Zhongxiao Li, Wei Chen, Xin Gao. DeeRect-PAS—A Deep-Learning based method for Transcriptome-wide PAS Identification. Poster. Advance In Artificial Intelligence, KAUST, 2019. Min Zhang, Yisheng Li, Juexiao Zhou, Yuhao He, Guipeng Li, Liang Fang, Wei Chen. Systematical discovery of cis-elements regulating alternative polyadenylationin mammalian cells. Poster. RNA Biology, CSH Asia, 2019. Min Zhang, Yisheng Li, Juexiao Zhou, Yuhao He, Guipeng Li, Liang Fang, Wei Chen. Systematical discovery of cis-elements regulating alternative polyadenylationin mammalian cells. Poster. Regulatory RNAs, Cell Symposia, Berlin, Germany, May 12-14, 2019. ","date":"0001-01-01","objectID":"/publications/:3:0","tags":null,"title":"","uri":"/publications/"}]