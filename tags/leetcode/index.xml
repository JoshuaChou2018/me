<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>leetcode - Tag - Juexiao Zhou</title>
        <link>https://www.joshuachou.ink/tags/leetcode/</link>
        <description>leetcode - Tag - Juexiao Zhou</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 17 Jan 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.joshuachou.ink/tags/leetcode/" rel="self" type="application/rss+xml" /><item>
    <title>lc273. Integer to English Words</title>
    <link>https://www.joshuachou.ink/lc273.integer_to_english_words/</link>
    <pubDate>Mon, 17 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/lc273.integer_to_english_words/</guid>
    <description><![CDATA[Convert a non-negative integer num to its English words representation.
Example 1:
1 2  Input: num = 123 Output: &#34;One Hundred Twenty Three&#34;   Example 2:
1 2  Input: num = 12345 Output: &#34;Twelve Thousand Three Hundred Forty Five&#34;   Example 3:
1 2  Input: num = 1234567 Output: &#34;One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven&#34;   Constraints:
 0 &lt;= num &lt;= 2^31 - 1  解题思路： 根据数字长度分成不同的翻译位:]]></description>
</item><item>
    <title>lc301. Remove Invalid Parentheses</title>
    <link>https://www.joshuachou.ink/lc301.remove_invalid_parentheses/</link>
    <pubDate>Mon, 17 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/lc301.remove_invalid_parentheses/</guid>
    <description><![CDATA[Given a string s that contains parentheses and letters, remove the minimum number of invalid parentheses to make the input string valid.
Return all the possible results. You may return the answer in any order.
Example 1:
1 2  Input: s = &#34;()())()&#34; Output: [&#34;(())()&#34;,&#34;()()()&#34;]   Example 2:
1 2  Input: s = &#34;(a)())()&#34; Output: [&#34;(a())()&#34;,&#34;(a)()()&#34;]   Example 3:
1 2  Input: s = &#34;)(&#34; Output: [&#34;&#34;]   Constraints:]]></description>
</item><item>
    <title>lc973. K Closest Points to Origin</title>
    <link>https://www.joshuachou.ink/lc973.k_closest_points_to_origin/</link>
    <pubDate>Sun, 16 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/lc973.k_closest_points_to_origin/</guid>
    <description><![CDATA[Given an array of points where points[i] = [xi, yi] represents a point on the X-Y plane and an integer k, return the k closest points to the origin (0, 0).
The distance between two points on the X-Y plane is the Euclidean distance (i.e., √(x1 - x2)2 + (y1 - y2)2).
You may return the answer in any order. The answer is guaranteed to be unique(except for the order that it is in).]]></description>
</item><item>
    <title>lc680. Valid Palindrome II</title>
    <link>https://www.joshuachou.ink/lc680.valid_palindrome_ii/</link>
    <pubDate>Thu, 13 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/lc680.valid_palindrome_ii/</guid>
    <description><![CDATA[Given a string s, return true if the s can be palindrome after deleting at most one character from it.
Example 1:
1 2  Input: s = &#34;aba&#34; Output: true   Example 2:
1 2 3  Input: s = &#34;abca&#34; Output: true Explanation: You could delete the character &#39;c&#39;.   Example 3:
1 2  Input: s = &#34;abc&#34; Output: false   Constraints:
 1 &lt;= s.]]></description>
</item><item>
    <title>lc953. Verifying an Alien Dictionary</title>
    <link>https://www.joshuachou.ink/lc953.verifying_an_alien_dictionary/</link>
    <pubDate>Wed, 12 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/lc953.verifying_an_alien_dictionary/</guid>
    <description><![CDATA[In an alien language, surprisingly, they also use English lowercase letters, but possibly in a different order. The order of the alphabet is some permutation of lowercase letters.
Given a sequence of words written in the alien language, and the order of the alphabet, return true if and only if the given words are sorted lexicographically in this alien language.
Example 1:
1 2 3  Input: words = [&#34;hello&#34;,&#34;leetcode&#34;], order = &#34;hlabcdefgijkmnopqrstuvwxyz&#34; Output: true Explanation: As &#39;h&#39; comes before &#39;l&#39; in this language, then the sequence is sorted.]]></description>
</item><item>
    <title>lc1249. Minimum Remove to Make Valid Parentheses</title>
    <link>https://www.joshuachou.ink/lc1249.minimum_remove_to_make_valid_parentheses/</link>
    <pubDate>Tue, 11 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/lc1249.minimum_remove_to_make_valid_parentheses/</guid>
    <description><![CDATA[Given a string s of '(' , ')' and lowercase English characters.
Your task is to remove the minimum number of parentheses ( '(' or ')', in any positions ) so that the resulting parentheses string is valid and return any valid string.
Formally, a parentheses string is valid if and only if:
 It is the empty string, contains only lowercase characters, or It can be written as AB (A concatenated with B), where A and B are valid strings, or It can be written as (A), where A is a valid string.]]></description>
</item><item>
    <title>lc155.Min Stack</title>
    <link>https://www.joshuachou.ink/lc155.min_stack/</link>
    <pubDate>Sat, 08 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/lc155.min_stack/</guid>
    <description><![CDATA[Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.
Implement the MinStack class:
 MinStack() initializes the stack object. void push(int val) pushes the element val onto the stack. void pop() removes the element on the top of the stack. int top() gets the top element of the stack. int getMin() retrieves the minimum element in the stack.  Example 1: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  Input [&#34;MinStack&#34;,&#34;push&#34;,&#34;push&#34;,&#34;push&#34;,&#34;getMin&#34;,&#34;pop&#34;,&#34;top&#34;,&#34;getMin&#34;] [[],[-2],[0],[-3],[],[],[],[]] Output [null,null,null,null,-3,null,0,-2] Explanation MinStack minStack = new MinStack(); minStack.]]></description>
</item><item>
    <title>剑指 Offer 09. 用两个栈实现队列</title>
    <link>https://www.joshuachou.ink/jz09.%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97/</link>
    <pubDate>Sat, 08 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/jz09.%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97/</guid>
    <description><![CDATA[用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 appendTail 和 deleteHead ，分别完成在队列尾部插入整数和在队列头部删除整数的功能。(若队列中没有元素，deleteHead 操作返回 -1 )
示例 1：
输入：
1 2 3  [&#34;CQueue&#34;,&#34;appendTail&#34;,&#34;deleteHead&#34;,&#34;deleteHead&#34;] [[],[3],[],[]] 输出：[null,null,3,-1]   示例 2：
输入：
1 2 3  [&#34;CQueue&#34;,&#34;deleteHead&#34;,&#34;appendTail&#34;,&#34;appendTail&#34;,&#34;deleteHead&#34;,&#34;deleteHead&#34;] [[],[],[5],[2],[],[]] 输出：[null,-1,null,null,5,2]   提示：
1 2 3  1 &lt;= values &lt;= 10000 最多会对 appendTail、deleteHead 进行 10000 次调用   来源：力扣（LeetCode） 链接：https://leetcode-cn.com/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
解题思路 输入为两个栈，
第一个栈对应的是操作： [&ldquo;CQueue&rdquo;,&ldquo;appendTail&rdquo;,&ldquo;deleteHead&rdquo;,&ldquo;deleteHead&rdquo;]
CQueue表示init一个CQueue object
appendTail表示调用appendTail函数
deleteHead表示调用deleteHead函数
第二个栈对应的是操作的值。
栈（Stack）的特点是先入后出，但是我们需要实现直接操作Head的功能。因此使用两个Stack可以实现列表倒序。
1 2 3 4 5 6 7 8 9 10 11 12 13  class CQueue: def __init__(self): self.]]></description>
</item></channel>
</rss>
