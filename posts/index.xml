<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - Juexiao Zhou</title>
        <link>https://www.joshuachou.ink/posts/</link>
        <description>All Posts | Juexiao Zhou</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 27 Jan 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.joshuachou.ink/posts/" rel="self" type="application/rss+xml" /><item>
    <title>lc31. Next Permutation</title>
    <link>https://www.joshuachou.ink/lc31.next_permutation/</link>
    <pubDate>Thu, 27 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/lc31.next_permutation/</guid>
    <description><![CDATA[A permutation of an array of integers is an arrangement of its members into a sequence or linear order.
 For example, for arr = [1,2,3], the following are considered permutations of arr: [1,2,3], [1,3,2], [3,1,2], [2,3,1].  The next permutation of an array of integers is the next lexicographically greater permutation of its integer. More formally, if all the permutations of the array are sorted in one container according to their lexicographical order, then the next permutation of that array is the permutation that follows it in the sorted container.]]></description>
</item><item>
    <title>lc56. Merge Intervals</title>
    <link>https://www.joshuachou.ink/lc56.merge_intervals/</link>
    <pubDate>Thu, 27 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/lc56.merge_intervals/</guid>
    <description><![CDATA[Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.
Example 1:
1 2 3  Input: intervals = [[1,3],[2,6],[8,10],[15,18]] Output: [[1,6],[8,10],[15,18]] Explanation: Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].   Example 2:
1 2 3  Input: intervals = [[1,4],[4,5]] Output: [[1,5]] Explanation: Intervals [1,4] and [4,5] are considered overlapping.]]></description>
</item><item>
    <title>lc125. Valid Palindrome</title>
    <link>https://www.joshuachou.ink/lc125.valid_palindrome/</link>
    <pubDate>Wed, 26 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/lc125.valid_palindrome/</guid>
    <description><![CDATA[A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.
Given a string s, return true if it is a palindrome, or false otherwise.
Example 1:
1 2 3  Input: s = &#34;A man, a plan, a canal: Panama&#34; Output: true Explanation: &#34;amanaplanacanalpanama&#34; is a palindrome.   Example 2:]]></description>
</item><item>
    <title>lc238. Product of Array Except Self</title>
    <link>https://www.joshuachou.ink/lc238._product_of_array_except_self/</link>
    <pubDate>Wed, 26 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/lc238._product_of_array_except_self/</guid>
    <description><![CDATA[Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].
The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.
You must write an algorithm that runs in O(n) time and without using the division operation.
Example 1:
1 2  Input: nums = [1,2,3,4] Output: [24,12,8,6]   Example 2:]]></description>
</item><item>
    <title>lc415. Add Strings</title>
    <link>https://www.joshuachou.ink/lc415.add_strings/</link>
    <pubDate>Wed, 26 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/lc415.add_strings/</guid>
    <description><![CDATA[Given two non-negative integers, num1 and num2 represented as string, return the sum of num1and num2 as a string.
You must solve the problem without using any built-in library for handling large integers (such as BigInteger). You must also not convert the inputs to integers directly.
Example 1:
1 2  Input: num1 = &#34;11&#34;, num2 = &#34;123&#34; Output: &#34;134&#34;   Example 2:
1 2  Input: num1 = &#34;456&#34;, num2 = &#34;77&#34; Output: &#34;533&#34;   Example 3:]]></description>
</item><item>
    <title>lc560. Subarray Sum Equals K</title>
    <link>https://www.joshuachou.ink/lc560.subarray_sum_equals_k/</link>
    <pubDate>Tue, 25 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/lc560.subarray_sum_equals_k/</guid>
    <description><![CDATA[Given an array of integers nums and an integer k, return the total number of continuous subarrays whose sum equals to k.
Example 1:
1 2  Input: nums = [1,1,1], k = 2 Output: 2   Example 2:
1 2  Input: nums = [1,2,3], k = 3 Output: 2   Constraints:
 1 &lt;= nums.length &lt;= 2 * 104 -1000 &lt;= nums[i] &lt;= 1000 -107 &lt;= k &lt;= 107  解题思路： 累积和（使用数组）]]></description>
</item><item>
    <title>lc301. Remove Invalid Parentheses</title>
    <link>https://www.joshuachou.ink/lc301.remove_invalid_parentheses/</link>
    <pubDate>Thu, 20 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/lc301.remove_invalid_parentheses/</guid>
    <description><![CDATA[Given a string s that contains parentheses and letters, remove the minimum number of invalid parentheses to make the input string valid.
Return all the possible results. You may return the answer in any order.
Example 1:
1 2  Input: s = &#34;()())()&#34; Output: [&#34;(())()&#34;,&#34;()()()&#34;]   Example 2:
1 2  Input: s = &#34;(a)())()&#34; Output: [&#34;(a())()&#34;,&#34;(a)()()&#34;]   Example 3:
1 2  Input: s = &#34;)(&#34; Output: [&#34;&#34;]   Constraints:]]></description>
</item><item>
    <title>lc67. Add Binary</title>
    <link>https://www.joshuachou.ink/lc67.add_binary/</link>
    <pubDate>Thu, 20 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/lc67.add_binary/</guid>
    <description><![CDATA[Given two binary strings a and b, return their sum as a binary string.
Example 1:
1 2  Input: a = &#34;11&#34;, b = &#34;1&#34; Output: &#34;100&#34;   Example 2:
1 2  Input: a = &#34;1010&#34;, b = &#34;1011&#34; Output: &#34;10101&#34;   Constraints:
 1 &lt;= a.length, b.length &lt;= 104 a and b consist only of '0' or '1' characters. Each string does not contain leading zeros except for the zero itself.]]></description>
</item><item>
    <title>lc273. Integer to English Words</title>
    <link>https://www.joshuachou.ink/lc273.integer_to_english_words/</link>
    <pubDate>Mon, 17 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/lc273.integer_to_english_words/</guid>
    <description><![CDATA[Convert a non-negative integer num to its English words representation.
Example 1:
1 2  Input: num = 123 Output: &#34;One Hundred Twenty Three&#34;   Example 2:
1 2  Input: num = 12345 Output: &#34;Twelve Thousand Three Hundred Forty Five&#34;   Example 3:
1 2  Input: num = 1234567 Output: &#34;One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven&#34;   Constraints:
 0 &lt;= num &lt;= 2^31 - 1  解题思路： 根据数字长度分成不同的翻译位:]]></description>
</item><item>
    <title>lc973. K Closest Points to Origin</title>
    <link>https://www.joshuachou.ink/lc973.k_closest_points_to_origin/</link>
    <pubDate>Sun, 16 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/lc973.k_closest_points_to_origin/</guid>
    <description><![CDATA[Given an array of points where points[i] = [xi, yi] represents a point on the X-Y plane and an integer k, return the k closest points to the origin (0, 0).
The distance between two points on the X-Y plane is the Euclidean distance (i.e., √(x1 - x2)2 + (y1 - y2)2).
You may return the answer in any order. The answer is guaranteed to be unique(except for the order that it is in).]]></description>
</item></channel>
</rss>
