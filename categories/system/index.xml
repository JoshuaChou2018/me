<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>system - Category - Juexiao Zhou</title>
        <link>https://www.joshuachou.ink/categories/system/</link>
        <description>system - Category - Juexiao Zhou</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 29 Jan 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.joshuachou.ink/categories/system/" rel="self" type="application/rss+xml" /><item>
    <title>搭建Time Machine 服务器 （转载）</title>
    <link>https://www.joshuachou.ink/%E6%90%AD%E5%BB%BAtimemachine-%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BD%AC%E8%BD%BD/</link>
    <pubDate>Sat, 29 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/%E6%90%AD%E5%BB%BAtimemachine-%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BD%AC%E8%BD%BD/</guid>
    <description><![CDATA[本文转载自：https://zhuanlan.zhihu.com/p/31088141
本文的内容分为：
 Time Machine 是什么？ 自建Time Machine 服务器的理由 硬件的选择 软件的部署 Mac 备份到Time Machine 服务器 从Time Machine 服务器恢复Mac  Time Machine 是什么？ Time Machine是macOS中一个非常强大的功能，Time Machine能够保留：
 本地快照（只要空间允许） 过去24小时的每小时备份 过去一个月的每日备份 过去所有月份的每周备份  Time Machine的备份是增量备份，只会备份自上次备份以来有变动的文件，因此备份速度很快，占用的空间也不多。如果Time Machine 占满了磁盘空间，最早的备份会被自动删除。
引用知友
@Xing
在OS X 中的 Time Machine 真的有用吗？中的回答：
 只要使用Time Machine备份过，即使原来的Mac在Windows双系统下渲染片子时突然蓝屏被你一气之下砸坏或者在麦当劳吃晚饭时被人连电脑包顺走，你也只需走进Apple Store，买一台新Mac，回家连上Time Capsule或者插上含有备份的硬盘，按住option开机进入recovery分区，选择从Time Machine中恢复。开机后打开迁移助手Migration Assistant，选择从Time Machine备份中恢复。等你小憩醒来，将会看到一台和之前一模一样的Mac，不仅是图库音乐库昨晚看过的美剧进度，包括所有设置、开机启动项浏览器历史都是完全一致的。 当然上面只是Time Machine顺滑体验的一部分，Time Machine可以带你回到每一个有记录的节点，例如你有一个project几个月前 从零开始做，在Time Machine中可以演绎整个project文件夹内的变化，同时可以把某个时间任何文件揪出来。这感觉就像你有一麻袋后悔药，想怎么来就怎么来。
 使用Time Machine，你既可以回到过去某个时刻，提取某个文件在当时的版本；也可以在电脑异常崩溃后直接全盘恢复到过去某个时刻的状态。
自建Time Machine 服务器的理由 Time Machine的使用方法有三种：
 使用一块外置的USB移动硬盘，要求文件系统是HFS+。 使用苹果的AirPort网络设备，通过有线网络/无线网络的方式备份到Airport的硬盘上。 使用Mac mini，安装「macOS Server」使之成为AFP协议传输的文件服务器，Time Machine备份到文件服务器上。  方法1.]]></description>
</item><item>
    <title>Example</title>
    <link>https://www.joshuachou.ink/example/</link>
    <pubDate>Sat, 01 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/example/</guid>
    <description><![CDATA[Example MD]]></description>
</item><item>
    <title>Unable to interact with text boxes during Build &amp; Publish for VRChat SDK3</title>
    <link>https://www.joshuachou.ink/vrcsdk_can_not_edit_text/</link>
    <pubDate>Fri, 17 Dec 2021 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/vrcsdk_can_not_edit_text/</guid>
    <description><![CDATA[Problem Description
Fors some unknow reason, the user is unable to click the text boxes or type anything into the publish window after running the Build &amp; Publish. When the user clicks the main window in Unity, the cursor disappears and the user can not select the text boxes or anything else.
This problem happens under my settings, macOS Catalina 10.15.7, Unity 2019.4.31f1, VRChat SDK3.
Solution
The reason of this problem is that when you click the temp scene created by the SDK3, the cursor will be invisible and locked.]]></description>
</item><item>
    <title>Install kernel for jupyter notebook</title>
    <link>https://www.joshuachou.ink/install-jupyter-kernel/</link>
    <pubDate>Sun, 28 Nov 2021 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/install-jupyter-kernel/</guid>
    <description><![CDATA[Avticate your environment，check for package ipykernel  python -m ipykernel &ndash;version
If it’s not installed：
python -m pip install ipykernel
Add kernel to Jupyter notebook  python -m ipykernel install &ndash;user &ndash;name &lsquo;kernelname&rsquo;
Check Jupyter notebook kernel  jupyter kernelspec list
Delet jupyter kernel  jupyter kernelspec remove kernelname]]></description>
</item><item>
    <title>Install Slurm in Ubuntu</title>
    <link>https://www.joshuachou.ink/install-slurm/</link>
    <pubDate>Sun, 14 Nov 2021 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/install-slurm/</guid>
    <description><![CDATA[Install
1  sudo apt install slurm-wlm slurm-wlm-doc -y   Modify config
1 2  rm /etc/slurm-llnl/slurm.conf vi /etc/slurm-llnl/slurm.conf   Example of config
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52  # slurm.]]></description>
</item><item>
    <title>安装Python导致VNC黑屏解决方案</title>
    <link>https://www.joshuachou.ink/%E5%AE%89%E8%A3%85python%E5%AF%BC%E8%87%B4vnc%E7%95%8C%E9%9D%A2%E9%BB%91%E5%B1%8F/</link>
    <pubDate>Sun, 14 Nov 2021 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/%E5%AE%89%E8%A3%85python%E5%AF%BC%E8%87%B4vnc%E7%95%8C%E9%9D%A2%E9%BB%91%E5%B1%8F/</guid>
    <description><![CDATA[问题在于VNCServer使用Python编写，所以受到系统Python版本影响。
解决方案：
1 2 3 4 5 6 7 8 9  $ cd $HOME $ vim .bashrc 找到如下语句： export PATH=&#34;/home/user/anaconda2/bin:$PATH&#34; 并修改为，并保存退出。 export PATH=&#34;$PATH:/home/user/anaconda2/bin&#34; $ vncserver -kill :id $ source .bashrc $ conda config --set auto_activate_base false #取消conda自动启动base   ]]></description>
</item><item>
    <title>typora &amp; uPic &amp; Github image hosting service</title>
    <link>https://www.joshuachou.ink/typora-upic-github-image-hosting-service/</link>
    <pubDate>Sun, 07 Nov 2021 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/typora-upic-github-image-hosting-service/</guid>
    <description><![CDATA[MacOS install uPic
1  brew install uPic   Set uPic
Set uPic host to Github
The default host is SMMS
Set Typora uploading to uPic]]></description>
</item><item>
    <title>How to ignore upper and lower case when using Tab in Ubuntu</title>
    <link>https://www.joshuachou.ink/how-to-ignore-upperlower-case-with-tab-in-ubuntu/</link>
    <pubDate>Fri, 05 Nov 2021 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/how-to-ignore-upperlower-case-with-tab-in-ubuntu/</guid>
    <description><![CDATA[Mofidy .inputrc
1  sudo vi ~/.inputrc   Add this line
1  set completion-ignore-case on   Restart your terminal
Now you can ignore the upper and lower case when you use Tab in terminal]]></description>
</item><item>
    <title>How to set autocomplete in Ubuntu</title>
    <link>https://www.joshuachou.ink/how-to-set-autocomplete-in-ubuntu/</link>
    <pubDate>Thu, 04 Nov 2021 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/how-to-set-autocomplete-in-ubuntu/</guid>
    <description><![CDATA[Mofidy bash.bashrc
1  sudo vi /etc/bash.bashrc   Find those code in the file
1 2 3 4 5 6 7 8  #enable bash completion in interactive shells #if ! shopt -oq posix; then # if [-f /usr/share/bash-completion/bash_completion ]; then # . /usr/share/bash-completion/bash_completion # elif [ -f /etc/bash_completion]; then # . /etc/bash_completion # fi #fi   Remove #
Like below:
1 2 3 4 5 6 7 8  #enable bash completion in interactive shells if !]]></description>
</item><item>
    <title>Miniserve, an elegant file server</title>
    <link>https://www.joshuachou.ink/miniserver/</link>
    <pubDate>Thu, 04 Nov 2021 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.joshuachou.ink/miniserver/</guid>
    <description><![CDATA[Install You can find it at here: https://github.com/svenstaro/miniserve/releases
Usage 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  miniserve --help miniserve 0.4.1 Sven-Hendrik Haase &lt;svenstaro@gmail.com&gt;, Boastful Squirrel &lt;boastful.squirrel@gmail.com&gt; For when you really just want to serve some files over HTTP right now! USAGE: miniserve [FLAGS] [OPTIONS] [--] [PATH] FLAGS: -u, --upload-files Enable file uploading -h, --help Prints help information -P, --no-symlinks Do not follow symbolic links -o, --overwrite-files Enable overriding existing files during file upload --random-route Generate a random 6-hexdigit route -V, --version Prints version information -v, --verbose Be verbose, includes emitting access logs OPTIONS: -a, --auth &lt;auth&gt; Set authentication (username:password) -c, --color-scheme &lt;color_scheme&gt; Default color scheme [default: Squirrel] [possible values: Archlinux, Zenburn, Monokai, Squirrel] -i, --if &lt;interfaces&gt;.]]></description>
</item></channel>
</rss>
